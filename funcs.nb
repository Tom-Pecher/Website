(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     20218,        381]
NotebookOptionsPosition[     18923,        352]
NotebookOutlinePosition[     19315,        368]
CellTagsIndexPosition[     19272,        365]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"funcs", "=", 
   RowBox[{"ToExpression", "[", 
    RowBox[{"GatherBy", "[", 
     RowBox[{
      RowBox[{"Sort", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Plus\>\"", ",", "\"\<Times\>\"", ",", "\"\<Power\>\"", ",", 
         "\"\<List\>\"", ",", "\"\<Table\>\"", ",", "\"\<Range\>\"", ",", 
         "\"\<Sum\>\"", ",", "\"\<Product\>\"", ",", "\"\<Integrate\>\"", 
         ",", "\"\<D\>\"", ",", "\"\<Solve\>\"", ",", "\"\<NSolve\>\"", ",", 
         "\"\<Reduce\>\"", ",", "\"\<Simplify\>\"", ",", 
         "\"\<FullSimplify\>\"", ",", "\"\<Expand\>\"", ",", "\"\<Factor\>\"",
          ",", "\"\<Plot\>\"", ",", "\"\<Plot3D\>\"", ",", "\"\<ListPlot\>\"",
          ",", "\"\<ListLinePlot\>\"", ",", "\"\<ContourPlot\>\"", ",", 
         "\"\<ParametricPlot\>\"", ",", "\"\<RegionPlot\>\"", ",", 
         "\"\<BarChart\>\"", ",", "\"\<Histogram\>\"", ",", 
         "\"\<PieChart\>\"", ",", "\"\<Graphics\>\"", ",", 
         "\"\<Graphics3D\>\"", ",", "\"\<Manipulate\>\"", ",", 
         "\"\<Dynamic\>\"", ",", "\"\<Animate\>\"", ",", "\"\<Style\>\"", 
         ",", "\"\<Row\>\"", ",", "\"\<Column\>\"", ",", "\"\<Grid\>\"", ",", 
         "\"\<Image\>\"", ",", "\"\<ImageData\>\"", ",", 
         "\"\<ImageResize\>\"", ",", "\"\<ImageCrop\>\"", ",", 
         "\"\<ImageRotate\>\"", ",", "\"\<ImageReflect\>\"", ",", 
         "\"\<ImageCompose\>\"", ",", "\"\<ImagePartition\>\"", ",", 
         "\"\<EdgeDetect\>\"", ",", "\"\<Blur\>\"", ",", "\"\<Sharpen\>\"", 
         ",", "\"\<ColorConvert\>\"", ",", "\"\<ImageFilter\>\"", ",", 
         "\"\<ColorReplace\>\"", ",", "\"\<ImageCollage\>\"", ",", 
         "\"\<ImageAssemble\>\"", ",", "\"\<ImageTransformation\>\"", ",", 
         "\"\<RandomInteger\>\"", ",", "\"\<RandomReal\>\"", ",", 
         "\"\<RandomChoice\>\"", ",", "\"\<RandomSample\>\"", ",", 
         "\"\<RandomVariate\>\"", ",", "\"\<SeedRandom\>\"", ",", 
         "\"\<Mean\>\"", ",", "\"\<Median\>\"", ",", "\"\<Variance\>\"", ",", 
         "\"\<StandardDeviation\>\"", ",", "\"\<Quantile\>\"", ",", 
         "\"\<BinCounts\>\"", ",", "\"\<Nearest\>\"", ",", 
         "\"\<FindClusters\>\"", ",", "\"\<FindShortestTour\>\"", ",", 
         "\"\<NearestNeighborGraph\>\"", ",", "\"\<FindGraphCommunities\>\"", 
         ",", "\"\<Eigenvalues\>\"", ",", "\"\<Eigenvectors\>\"", ",", 
         "\"\<Det\>\"", ",", "\"\<Inverse\>\"", ",", "\"\<Transpose\>\"", 
         ",", "\"\<Dot\>\"", ",", "\"\<MatrixPower\>\"", ",", 
         "\"\<LinearSolve\>\"", ",", "\"\<LinearModelFit\>\"", ",", 
         "\"\<NonlinearModelFit\>\"", ",", "\"\<FindFit\>\"", ",", 
         "\"\<Fit\>\"", ",", "\"\<LeastSquares\>\"", ",", 
         "\"\<LinearProgramming\>\"", ",", "\"\<FindMaximum\>\"", ",", 
         "\"\<FindMinimum\>\"", ",", "\"\<FindArgMin\>\"", ",", 
         "\"\<FindArgMax\>\"", ",", "\"\<FindRoot\>\"", ",", 
         "\"\<NDSolve\>\"", ",", "\"\<DSolve\>\"", ",", "\"\<Fourier\>\"", 
         ",", "\"\<InverseFourier\>\"", ",", "\"\<LaplaceTransform\>\"", ",", 
         "\"\<InverseLaplaceTransform\>\"", ",", "\"\<FourierTransform\>\"", 
         ",", "\"\<InverseFourierTransform\>\"", ",", "\"\<DiscretePlot\>\"", 
         ",", "\"\<UnitStep\>\"", ",", "\"\<DiracDelta\>\"", ",", 
         "\"\<KroneckerDelta\>\"", ",", "\"\<HeavisideTheta\>\"", ",", 
         "\"\<InverseWaveletTransform\>\"", ",", 
         "\"\<DiscreteWaveletTransform\>\"", ",", "\"\<WaveletBestBasis\>\"", 
         ",", "\"\<FactorInteger\>\"", ",", "\"\<PrimeQ\>\"", ",", 
         "\"\<NextPrime\>\"", ",", "\"\<Prime\>\"", ",", "\"\<PrimePi\>\"", 
         ",", "\"\<Mod\>\"", ",", "\"\<Quotient\>\"", ",", 
         "\"\<Rationalize\>\"", ",", "\"\<IntegerPart\>\"", ",", 
         "\"\<FractionalPart\>\"", ",", "\"\<Floor\>\"", ",", 
         "\"\<Ceiling\>\"", ",", "\"\<Round\>\"", ",", "\"\<Divisible\>\"", 
         ",", "\"\<GCD\>\"", ",", "\"\<LCM\>\"", ",", "\"\<FindPath\>\"", 
         ",", "\"\<FindCycle\>\"", ",", "\"\<Graph\>\"", ",", 
         "\"\<GraphPlot\>\"", ",", "\"\<GraphPlot3D\>\"", ",", 
         "\"\<GraphDistance\>\"", ",", "\"\<GraphDiameter\>\"", ",", 
         "\"\<AdjacencyMatrix\>\"", ",", "\"\<IncidenceMatrix\>\"", ",", 
         "\"\<DegreeCentrality\>\"", ",", "\"\<PageRankCentrality\>\"", ",", 
         "\"\<BetweennessCentrality\>\"", ",", "\"\<EdgeList\>\"", ",", 
         "\"\<VertexList\>\"", ",", "\"\<Subgraph\>\"", ",", 
         "\"\<CompleteGraph\>\"", ",", "\"\<CycleGraph\>\"", ",", 
         "\"\<PathGraph\>\"", ",", "\"\<RandomGraph\>\"", ",", 
         "\"\<GraphUnion\>\"", ",", "\"\<GraphIntersection\>\"", ",", 
         "\"\<GraphDifference\>\"", ",", "\"\<Complement\>\"", ",", 
         "\"\<Union\>\"", ",", "\"\<Intersection\>\"", ",", 
         "\"\<Complement\>\"", ",", "\"\<Sort\>\"", ",", "\"\<SortBy\>\"", 
         ",", "\"\<Select\>\"", ",", "\"\<Cases\>\"", ",", 
         "\"\<DeleteCases\>\"", ",", "\"\<Replace\>\"", ",", 
         "\"\<ReplaceAll\>\"", ",", "\"\<Rule\>\"", ",", 
         "\"\<RuleDelayed\>\"", ",", "\"\<Condition\>\"", ",", 
         "\"\<MatchQ\>\"", ",", "\"\<FreeQ\>\"", ",", "\"\<Count\>\"", ",", 
         "\"\<Position\>\"", ",", "\"\<Map\>\"", ",", "\"\<Apply\>\"", ",", 
         "\"\<MapIndexed\>\"", ",", "\"\<MapThread\>\"", ",", "\"\<Nest\>\"", 
         ",", "\"\<NestList\>\"", ",", "\"\<Fold\>\"", ",", 
         "\"\<FoldList\>\"", ",", "\"\<Scan\>\"", ",", "\"\<Function\>\"", 
         ",", "\"\<If\>\"", ",", "\"\<Which\>\"", ",", "\"\<Switch\>\"", ",", 
         "\"\<Do\>\"", ",", "\"\<While\>\"", ",", "\"\<For\>\"", ",", 
         "\"\<Module\>\"", ",", "\"\<Block\>\"", ",", "\"\<With\>\"", ",", 
         "\"\<DynamicModule\>\"", ",", "\"\<Catch\>\"", ",", "\"\<Throw\>\"", 
         ",", "\"\<Assert\>\"", ",", "\"\<Check\>\"", ",", 
         "\"\<CheckAbort\>\"", ",", "\"\<AbortProtect\>\"", ",", 
         "\"\<Quiet\>\"", ",", "\"\<Echo\>\"", ",", "\"\<Print\>\"", ",", 
         "\"\<PrintTemporary\>\"", ",", "\"\<NotebookWrite\>\"", ",", 
         "\"\<NotebookDelete\>\"", ",", "\"\<NotebookRead\>\"", ",", 
         "\"\<NotebookApply\>\"", ",", "\"\<CreateNotebook\>\"", ",", 
         "\"\<Notebook\>\"", ",", "\"\<NotebookSave\>\"", ",", 
         "\"\<NotebookClose\>\"", ",", "\"\<NotebookOpen\>\"", ",", 
         "\"\<SetOptions\>\"", ",", "\"\<CurrentValue\>\"", ",", 
         "\"\<Options\>\"", ",", "\"\<OptionsPattern\>\"", ",", 
         "\"\<Message\>\"", ",", "\"\<Clear\>\"", ",", "\"\<ClearAll\>\"", 
         ",", "\"\<Remove\>\"", ",", "\"\<Symbol\>\"", ",", 
         "\"\<ToExpression\>\"", ",", "\"\<ToString\>\"", ",", 
         "\"\<InputForm\>\"", ",", "\"\<OutputForm\>\"", ",", 
         "\"\<StandardForm\>\"", ",", "\"\<TraditionalForm\>\"", ",", 
         "\"\<FullForm\>\"", ",", "\"\<Short\>\"", ",", "\"\<ByteCount\>\"", 
         ",", "\"\<MemoryConstrained\>\"", ",", "\"\<TimeConstrained\>\"", 
         ",", "\"\<AbsoluteTime\>\"", ",", "\"\<DateString\>\"", ",", 
         "\"\<DateList\>\"", ",", "\"\<DateObject\>\"", ",", 
         "\"\<CurrentDate\>\"", ",", "\"\<Clock\>\"", ",", "\"\<Refresh\>\"", 
         ",", "\"\<Pause\>\"", ",", "\"\<TimeSeries\>\"", ",", 
         "\"\<EventSeries\>\"", ",", "\"\<TemporalData\>\"", ",", 
         "\"\<TimeSeriesModelFit\>\"", ",", "\"\<MovingAverage\>\"", ",", 
         "\"\<ExponentialMovingAverage\>\"", ",", "\"\<FinancialData\>\"", 
         ",", "\"\<FinancialIndicator\>\"", ",", "\"\<CountryData\>\"", ",", 
         "\"\<WeatherData\>\"", ",", "\"\<GeoGraphics\>\"", ",", 
         "\"\<GeoPosition\>\"", ",", "\"\<GeoDistance\>\"", ",", 
         "\"\<GeoNearest\>\"", ",", "\"\<CityData\>\"", ",", "\"\<Entity\>\"",
          ",", "\"\<EntityList\>\"", ",", "\"\<EntityValue\>\"", ",", 
         "\"\<SemanticImport\>\"", ",", "\"\<SemanticImportString\>\"", ",", 
         "\"\<Import\>\"", ",", "\"\<Export\>\"", ",", "\"\<FileNames\>\"", 
         ",", "\"\<Directory\>\"", ",", "\"\<SetDirectory\>\"", ",", 
         "\"\<NotebookDirectory\>\"", ",", "\"\<CreateFile\>\"", ",", 
         "\"\<DeleteFile\>\"", ",", "\"\<FileSize\>\"", ",", 
         "\"\<FileByteCount\>\"", ",", "\"\<FileHash\>\"", ",", 
         "\"\<FileDate\>\"", ",", "\"\<StringJoin\>\"", ",", 
         "\"\<StringSplit\>\"", ",", "\"\<StringReplace\>\"", ",", 
         "\"\<StringCases\>\"", ",", "\"\<StringMatchQ\>\"", ",", 
         "\"\<StringFreeQ\>\"", ",", "\"\<StringCount\>\"", ",", 
         "\"\<StringPosition\>\"", ",", "\"\<ToUpperCase\>\"", ",", 
         "\"\<ToLowerCase\>\"", ",", "\"\<Characters\>\"", ",", 
         "\"\<StyleForm\>\"", ",", "\"\<Framed\>\"", ",", "\"\<Panel\>\"", 
         ",", "\"\<TabView\>\"", ",", "\"\<Checkbox\>\"", ",", 
         "\"\<PopupWindow\>\"", ",", "\"\<Pane\>\"", ",", "\"\<Spacer\>\"", 
         ",", "\"\<StatusArea\>\"", ",", "\"\<ProgressIndicator\>\"", ",", 
         "\"\<Slider\>\"", ",", "\"\<Locator\>\"", ",", "\"\<Opener\>\"", 
         ",", "\"\<EventHandler\>\"", ",", "\"\<LocatorPane\>\"", ",", 
         "\"\<Button\>\"", ",", "\"\<ClickPane\>\"", ",", 
         "\"\<RadioButton\>\""}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.939598889627162*^9, 3.9395989018518744`*^9}, {
  3.9395989510224257`*^9, 3.939598956526951*^9}, {3.9395995050162067`*^9, 
  3.9395995070673923`*^9}, {3.939788234684993*^9, 3.939788242298957*^9}, {
  3.939788417320611*^9, 3.9397884637736197`*^9}, {3.939789379956881*^9, 
  3.9397894180473413`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"c69ba79f-4994-426a-8446-5bcf9b274a8c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Flatten", "[", "funcs", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.939789546419656*^9, 3.939789562252061*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"ca4ae1a9-a57d-475f-90d5-89265ae0b564"],

Cell[BoxData["289"], "Output",
 CellChangeTimes->{{3.939789549915503*^9, 3.9397895628964653`*^9}},
 CellLabel->"Out[63]=",ExpressionUUID->"b822e8e2-94a0-4a07-bec9-bbb5170c015c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Echo", "[", 
     RowBox[{
      RowBox[{"Information", "[", 
       RowBox[{"#", ",", "\"\<Usage\>\""}], "]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "&"}], "/@", 
   RowBox[{"funcs", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9397883540912313`*^9, 3.939788395207305*^9}, {
   3.9397884390729856`*^9, 3.9397884396840467`*^9}, {3.93978847469641*^9, 
   3.939788486283532*^9}, {3.939788616816063*^9, 3.939788622697028*^9}, 
   3.939788673982782*^9, {3.939788807925506*^9, 3.9397888281423264`*^9}, {
   3.9397894778880663`*^9, 3.939789502416548*^9}, {3.93978958076303*^9, 
   3.939789669035675*^9}, {3.9397900626354733`*^9, 3.93979006387782*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"0f5bcb08-014a-4468-ab16-d17fd9a79363"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"-", "1"}],
   "EchoLabel"], 
  "  ", "\<\"\\!\\(\\*RowBox[{\\\"AbortProtect\\\", \\\"[\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\), saving any aborts until the \
evaluation is complete. \"\>"}]], "Echo",
 CellChangeTimes->{
  3.9397900647572403`*^9},ExpressionUUID->"8b2615ad-06b6-42ba-bbba-\
e775f5591c2e"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"-", "1"}],
   "EchoLabel"], 
  "  ", "\<\"\\!\\(\\*RowBox[{\\\"AbsoluteTime\\\", \\\"[\\\", \\\"]\\\"}]\\) \
gives the total number of seconds since the beginning of January 1, 1900, in \
your time zone.\\n\\!\\(\\*RowBox[{\\\"AbsoluteTime\\\", \\\"[\\\", StyleBox[\
\\\"date\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the absolute time \
specification corresponding to the given \\!\\(\\*StyleBox[\\\"date\\\", \
\\\"TI\\\"]\\) specification.\"\>"}]], "Echo",
 CellChangeTimes->{
  3.939790064779374*^9},ExpressionUUID->"d64071ca-17c1-4953-b020-\
b250576f4566"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"-", "1"}],
   "EchoLabel"], 
  "  ", "\<\"\\!\\(\\*RowBox[{\\\"AdjacencyMatrix\\\", \\\"[\\\", StyleBox[\\\
\"g\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the vertex\[Dash]vertex adjacency \
matrix of the graph \\!\\(\\*StyleBox[\\\"g\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"AdjacencyMatrix\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\
\[Rule]\\\", StyleBox[\\\"w\\\", \\\"TI\\\"]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) uses rules \\!\\(\
\\*RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\"\[Rule]\\\", StyleBox[\\\"w\\\
\", \\\"TI\\\"]}]\\) to specify the graph \\!\\(\\*StyleBox[\\\"g\\\", \\\"TI\
\\\"]\\). \"\>"}]], "Echo",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.939790064805011*^9, {3.939790200651792*^9, 
   3.939790200652842*^9}},ExpressionUUID->"ca9323a1-eeec-4848-992b-\
741e47550471"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"-", "1"}],
   "EchoLabel"], 
  "  ", "\<\"\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\
\\\", \\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates an animation of \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) in which \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) varies continuously from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) takes \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to vary in steps \
\\!\\(\\*StyleBox[\\\"du\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
makes \\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) take on discrete values \\!\
\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), \[Ellipsis]. \
\\n\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) varies all the variables \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\), \[Ellipsis]. \"\>"}]], "Echo",
 CellChangeTimes->{
  3.939790064824518*^9},ExpressionUUID->"29ad3c07-408d-4ac1-8862-\
c522ac0323d0"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"-", "1"}],
   "EchoLabel"], 
  "  ", "\<\"\\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"@@\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\\) or \\!\\(\\*RowBox[{\\\"Apply\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) replaces the head of \\!\
\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) by \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"@@@\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}]\\) or \
\\!\\(\\*RowBox[{\\\"Apply\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"TI\
\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]}], \\\"]\\\"}]\\) replaces heads at \
level 1 of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) by \
\\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"Apply\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"expr\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"levelspec\\\", \\\"TI\\\"]}], \
\\\"]\\\"}]\\) replaces heads in parts of \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) specified by \\!\\(\\*StyleBox[\\\"levelspec\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Apply\\\", \\\"[\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents an operator form \
of Apply that can be applied to an expression.\"\>"}]], "Echo",
 CellChangeTimes->{
  3.939790064844405*^9},ExpressionUUID->"632ac733-b01e-4c40-8122-\
8cb34fc9a8c0"],

Cell[BoxData[
 RowBox[{
  TagBox[
   RowBox[{"-", "1"}],
   "EchoLabel"], 
  "  ", "\<\"\\!\\(\\*RowBox[{\\\"Assert\\\", \\\"[\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\"]\\\"}]\\) represents the assertion \
that \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) is True. If assertions \
have been enabled, \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) is \
evaluated when the assertion is encountered. If \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) is not True, then an assertion \
failure is generated.\\n\\!\\(\\*RowBox[{\\\"Assert\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"tag\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) specifies a tag that will be used to identify \
the assertion if it fails.\"\>"}]], "Echo",
 CellChangeTimes->{
  3.939790064863496*^9},ExpressionUUID->"1cf3014b-0937-4cae-ac33-\
12e0b288b49b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1396.5, 762.},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"019f1fbc-fa4a-4bca-b251-f0a1a95fcb43"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 9711, 147, 628, "Input",ExpressionUUID->"c69ba79f-4994-426a-8446-5bcf9b274a8c"],
Cell[CellGroupData[{
Cell[10294, 171, 242, 4, 29, "Input",ExpressionUUID->"ca4ae1a9-a57d-475f-90d5-89265ae0b564"],
Cell[10539, 177, 177, 2, 33, "Output",ExpressionUUID->"b822e8e2-94a0-4a07-bec9-bbb5170c015c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10753, 184, 826, 17, 29, "Input",ExpressionUUID->"0f5bcb08-014a-4468-ab16-d17fd9a79363"],
Cell[CellGroupData[{
Cell[11604, 205, 426, 11, 26, "Echo",ExpressionUUID->"8b2615ad-06b6-42ba-bbba-e775f5591c2e"],
Cell[12033, 218, 604, 13, 45, "Echo",ExpressionUUID->"d64071ca-17c1-4953-b020-b250576f4566"],
Cell[12640, 233, 971, 20, 45, "Echo",ExpressionUUID->"ca9323a1-eeec-4848-992b-741e47550471"],
Cell[13614, 255, 2854, 45, 85, "Echo",ExpressionUUID->"29ad3c07-408d-4ac1-8862-c522ac0323d0"],
Cell[16471, 302, 1559, 27, 85, "Echo",ExpressionUUID->"632ac733-b01e-4c40-8122-8cb34fc9a8c0"],
Cell[18033, 331, 862, 17, 65, "Echo",ExpressionUUID->"1cf3014b-0937-4cae-ac33-12e0b288b49b"]
}, Open  ]]
}, Open  ]]
}
]
*)

